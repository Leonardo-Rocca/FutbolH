{"version":3,"sources":["logo.svg","components/AppBar.js","components/CheckList.js","components/TeamsList.js","MainPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","props","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","edge","variant","Button","color","width","CheckList","_React$useState","React","useState","_React$useState2","Object","slicedToArray","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","List","map","labelId","concat","ListItem","key","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","aria-labelledby","ListItemText","id","primary","ListItemSecondaryAction","IconButton","aria-label","Edit_default","Delete_default","overflow","maxHeight","listSection","backgroundColor","ul","padding","listHeader","palette","secondary","main","TeamsList","subheader","sectionId","ListSubheader","item","MainPanel","react","Box","ml","mr","PlayArrow_default","justifyContent","display","createMuiTheme","green","teal","type","contrastText","status","danger","App","ThemeProvider","src_MainPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c7a6985.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ButtonAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                   {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>*/}\n                    <Typography edge=\"start\" variant=\"h6\" className={classes.title}>\n                        {props.title}\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n       // maxWidth: 360,\n       // backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function CheckList() {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n\n    const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    return (\n        <List className={classes.root}>\n            {[0, 1, 2, 3].map(value => {\n                const labelId = `checkbox-list-label-${value}`;\n\n                return (\n                    <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={checked.indexOf(value) !== -1}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"Comments\">\n                                <Edit color=\"secondary\"/>\n                            </IconButton>\n                            <IconButton edge=\"end\" aria-label=\"Comments\">\n                                <Delete color=\"secondary\"/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n   //     maxWidth: 360,\n   //     backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 600,\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    listHeader: {\n        backgroundColor:theme.palette.secondary.main,\n        color:'black',\n       // backgroundColor: theme.palette.background.paper,\n    },\n\n}));\n\nexport default function TeamsList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root} subheader={<li />}>\n            {[0, 1, 2].map(sectionId => (\n                <li key={`section-${sectionId}`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader color=\"secondary\" className={classes.listHeader}>{`Equipo ${sectionId+1}`}</ListSubheader>\n                        {[0, 1, 2, 3, 4].map(item => (\n                            <ListItem key={`item-${sectionId}-${item}`}>\n                                <ListItemText primary={`Item ${item}`} />\n                            </ListItem>\n                        ))}\n                    </ul>\n                </li>\n            ))}\n        </List>\n    );\n}","import * as React from \"react\";\nimport ButtonAppBar from \"./components/AppBar\";\nimport CheckList from \"./components/CheckList\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport TeamsList from \"./components/TeamsList\";\nimport Box from \"@material-ui/core/Box\";\n\nclass MainPanel extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-a\">\n                    <ButtonAppBar title=\"Arma tu Team\"/>\n                </header>\n                <Box ml={4} mr={4}>\n                    <CheckList/>\n\n                    <Button variant=\"contained\" color=\"primary\">\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Generar\">\n                            <PlayArrowIcon/>\n                        </IconButton>\n                        Generar\n                    </Button>\n\n                    <Box justifyContent=\"center\" display=\"flex\" ml={4} mr={4}>\n                        <TeamsList/>\n                    </Box>\n                </Box>\n            </div>)\n    }\n}\n\nexport default MainPanel;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/lightGreen';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport MainPanel from './MainPanel';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green,\n        secondary: teal,\n        type: 'dark',\n        contrastText: '#ffcc00',\n    },\n    status: {\n        danger: 'orange',\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <MainPanel />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}