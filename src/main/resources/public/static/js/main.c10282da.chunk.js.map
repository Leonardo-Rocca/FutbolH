{"version":3,"sources":["logo.svg","components/AppBar.js","components/CheckList.js","components/TeamsList.js","PlayersClient.js","components/PlusButton.js","components/AddPlayerPanel.js","MainPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","palette","primary","contrastText","ButtonAppBar","props","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","edge","variant","Button","width","CheckList","checked","handleToggle","isChecked","value","indexOf","player","List","players","map","playerName","name","size","charAt","toUpperCase","slice","labelId","concat","ListItem","key","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","aria-labelledby","ListItemText","id","ListItemSecondaryAction","IconButton","aria-label","Delete_default","overflow","maxHeight","listSection","backgroundColor","ul","padding","listHeader","secondary","main","TeamsList","subheader","teams","aTeam","sectionId","ListSubheader","item","require","fab","margin","extendedIcon","PlusButton","Fab","Add_default","container","display","flexWrap","textField","marginLeft","marginTop","menu","TextFields","handleAdd","_React$useState","React","useState","ability","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","newPlayer","noValidate","autoComplete","TextField","label","onChange","type","InputLabelProps","shrink","MainPanel","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getAll","console","log","fetch","host","method","headers","Content-Type","Access-Control-Allow-Origin","then","response","state","playersCheckList","json","data","setState","j","currentIndex","newChecked","toConsumableArray","push","splice","newState","newPlchkList","checkedPlayers","sort","Math","random","tsize","trunc","length","team1","team2","_this2","jugadores","react","Box","ml","mr","v","bind","generateTeams","Icon","PlayArrow_default","justifyContent","createMuiTheme","green","contrastThreshold","status","danger","App","ThemeProvider","src_MainPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c10282da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color:theme.palette.primary.contrastText,\n    },\n}));\n\nexport default function ButtonAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                   {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>*/}\n                    <Typography edge=\"start\" variant=\"h6\" className={classes.title}>\n                        {props.title}\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n       // maxWidth: 360,\n       // backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function CheckList(props) {\n    const classes = useStyles();\n  //  const [checked, setChecked] = React.useState([0]);\n\n    const checked = props.checked;\n    const handleToggle = props.handleToggle;\n   /* const setChecked = props.setChecked;\n\n    const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n*/\n    function isChecked(value) {\n        return checked.indexOf(value.player) !== -1;\n    }\n\n    return (\n        <List className={classes.root}>\n            {props.players.map(value => {\n                let playerName = value.player.name;\n                playerName = playerName.size<2?playerName:playerName.charAt(0).toUpperCase() + playerName.slice(1);\n                const labelId = `checkbox-list-label-${playerName}`;\n\n                return (\n                    <ListItem key={playerName} role={undefined} dense button onClick={() => handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={isChecked(value)}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={` ${playerName}`} />\n                        <ListItemSecondaryAction>\n{/*                            <IconButton edge=\"end\" aria-label=\"Comments\">\n                                <Edit color=\"secondary\"/>\n                            </IconButton>*/}\n                            <IconButton edge=\"end\" aria-label=\"Comments\">\n                                <Delete color=\"secondary\"/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n   //     maxWidth: 360,\n   //     backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 600,\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    listHeader: {\n        backgroundColor:theme.palette.secondary.main,\n        color:theme.palette.secondary.contrastText,\n       // backgroundColor: theme.palette.background.paper,\n    },\n\n}));\n\nexport default function TeamsList(props) {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root} subheader={<li />}>\n            {props.teams.map((aTeam,sectionId) => (\n                <li key={`section-${sectionId}`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader  className={classes.listHeader}>{`Equipo ${sectionId+1}`}</ListSubheader>\n                        {aTeam.map(item => (\n                            <ListItem key={`${sectionId}-${item.name}`}>\n                                <ListItemText primary={`${item.name}`} />\n                            </ListItem>\n                        ))}\n                    </ul>\n                </li>\n            ))}\n        </List>\n    );\n}","var request = require('request');\n\n\n\nexport default function  getPlayers(){\n    let host = 'http://arma-tu-equipo.herokuapp.com/';\n    host=\"http://localhost:5000/\"\n    return fetch(host+'players', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n;\n\n\n    /*\n    request('http://arma-tu-equipo.herokuapp.com/players', function (error, response, body) {\n        console.error('error:', error); // Print the error if one occurred\n        console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n        console.log('body:', body); // Print the HTML for the Google homepage.\n    return response;\n    });*/\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function PlusButton(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} onClick={props.onClick}>\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport PlusButton from \"./PlusButton\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n}));\n\nexport default function TextFields(props) {\n\n    const handleAdd = props.handleAdd;\n\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        name: 'Juan',\n        ability: '10',\n    });\n\n    const handleChange = name => event => {\n        setValues({ ...values, [name]: event.target.value });\n    };\n    let newPlayer={name:values.name,ability:values.ability};\n\n    function handelOnClick() {\n        if (values.name == '' || values.ability == '') return;\n        handleAdd(newPlayer);\n        setValues({name:'',ability: '',})\n    }\n\n    return (\n        <div>\n             <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n                id=\"standard-name\"\n                label=\"Nombre\"\n                  className={classes.textField}\n                   value={values.name}\n                  onChange={handleChange('name')}\n                margin=\"normal\"\n            />\n            <TextField\n                id=\"standard-number\"\n                label=\"Habilidad\"\n                   value={values.ability}\n                   onChange={handleChange('ability')}\n                type=\"number\"\n                   className={classes.textField}\n                   InputLabelProps={{\n                       shrink: true,\n                   }}\n                margin=\"normal\"\n            />\n        </form>\n            <PlusButton onClick={handelOnClick} />\n        </div>\n    );\n}","import * as React from \"react\";\nimport ButtonAppBar from \"./components/AppBar\";\nimport CheckList from \"./components/CheckList\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport TeamsList from \"./components/TeamsList\";\nimport Box from \"@material-ui/core/Box\";\nimport PlayersClient from './PlayersClient';\nimport AddPlayerPanel from \"./components/AddPlayerPanel\";\nimport Icon from \"@material-ui/core/Icon\";\n\nclass MainPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            playersCheckList: [],\n            checked: [],\n            teams:[]\n        };\n    }\n\n    getAll = () => {\n\n        console.log(1);\n        PlayersClient().then(response => this.state.playersCheckList = response.json())\n            .then(data => this.setState({\n                data: data, playersCheckList: data.map(j => {\n                    return {\n                        player: j,\n                        checked: false\n                    }\n                })\n            }));\n    }\n\n    componentDidMount() {\n        this.getAll();\n    }\n\n    handleToggle(value) {\n        let checked = this.state.checked;\n    console.log(value)\n        const currentIndex = checked.indexOf(value.player);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.player);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        let newState = {...this.state};\n        newState.checked = newChecked;\n        this.setState(newState)\n    }\n\n    handleAdd(player){\n\n        let newState = {...this.state};\n        let newPlchkList =newState.playersCheckList.slice(0);\n        newPlchkList.push({player:player,checked:false})\n\n        newState.playersCheckList =newPlchkList;\n        this.setState(newState)\n    }\n\n     generateTeams() {\n\n         let teams = [];\n         let checkedPlayers = this.state.checked;\n         checkedPlayers.sort(function() {\n             return .5 - Math.random();\n         });\n         let tsize=Math.trunc(checkedPlayers.length/2);\n         let team1 = checkedPlayers.slice(0,tsize);\n         let team2 = checkedPlayers.slice(tsize);\n         teams.push(team1);\n         teams.push(team2);\n         this.setState({...this.state,teams: teams})\n         console.log(this.state)\n     }\n\n    render() {\n\n        let jugadores = this.state.playersCheckList;\n        let checked = this.state.checked;\n        let teams = this.state.teams;\n\n\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-a\">\n                    <ButtonAppBar title=\"Arma tu Team\"/>\n                </header>\n                <Box ml={4} mr={4}>\n\n                    <AddPlayerPanel handleAdd={(v) => this.handleAdd.bind(this)(v)}/>\n\n                    <CheckList players={jugadores} checked={checked}\n                               handleToggle={(v) => this.handleToggle.bind(this)(v)}/>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.generateTeams.bind(this)}>\n                        <Box>\n                            <Icon className=\"play-arrow\" edge=\"start\" color=\"inherit\" aria-label=\"Generar\">\n                                <PlayArrowIcon/>\n                            </Icon>\n                        </Box>\n                        Generar\n                    </Button>\n\n                    <Box justifyContent=\"center\" display=\"flex\" ml={4} mr={4}>\n                        <TeamsList teams={teams}/>\n                    </Box>\n                </Box>\n            </div>)\n    }\n\n\n}\n\nexport default MainPanel;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/lightGreen';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport MainPanel from './MainPanel';\n\nconst theme = createMuiTheme({\n    palette: {\n        /*primary: {\n            main: '#aeea00',// green\n            contrastText: '#ffffff',\n        },*/\n        primary:green,\n        secondary: {\n            main: '#00685b',// teal\n          //  contrastText: '#ffffff',\n        },\n       // type: 'dark',\n      //  contrastText: '#ffcc00',\n        contrastThreshold: 3,\n    },\n    status: {\n        danger: 'orange',\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <MainPanel />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}