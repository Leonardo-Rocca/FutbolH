{"version":3,"sources":["logo.svg","components/AppBar.js","components/CheckList.js","components/TeamsList.js","PlayersClient.js","components/PlusButton.js","components/AddPlayerPanel.js","MainPanel.js","TeamGenerator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","palette","primary","contrastText","ButtonAppBar","props","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","edge","variant","Button","width","CheckList","checked","handleToggle","handleDelete","isChecked","value","indexOf","List","players","map","playerName","player","name","playerAbility","ability","size","charAt","toUpperCase","slice","labelId","concat","ListItem","key","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","aria-labelledby","ListItemText","id","secondary","ListItemSecondaryAction","IconButton","aria-label","Delete_default","overflow","maxHeight","listSection","backgroundColor","ul","padding","listHeader","main","TeamsList","subheader","teams","aTeam","sectionId","ListSubheader","item","require","fab","margin","extendedIcon","PlusButton","Fab","Add_default","container","display","flexWrap","textField","marginLeft","marginTop","menu","TextFields","handleAdd","_React$useState","React","useState","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","newPlayer","noValidate","autoComplete","TextField","label","onChange","type","InputLabelProps","shrink","TeamsNumber","react","teamsNumber","MainPanel","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getAll","console","log","fetch","host","method","headers","Content-Type","Access-Control-Allow-Origin","then","response","state","playersCheckList","json","data","setState","j","currentIndex","i","newChecked","toConsumableArray","newPlchkList","push","splice","checkedPlayers","getSelectedPlayers","sort","Math","random","quantity","arguments","length","tsize","trunc","generateTeams","_this2","jugadores","Box","ml","mr","v","bind","handleChangeTeamsNumber","Icon","PlayArrow_default","justifyContent","filter","createMuiTheme","green","contrastThreshold","status","danger","App","ThemeProvider","src_MainPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09ce9eaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color:theme.palette.primary.contrastText,\n    },\n}));\n\nexport default function ButtonAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                   {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>*/}\n                    <Typography edge=\"start\" variant=\"h6\" className={classes.title}>\n                        {props.title}\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n       // maxWidth: 360,\n       // backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function CheckList(props) {\n    const classes = useStyles();\n  //  const [checked, setChecked] = React.useState([0]);\n\n    const checked = props.checked;\n    const handleToggle = props.handleToggle;\n    const handleDelete = props.handleDelete;\n   /* const setChecked = props.setChecked;\n\n    const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n*/\n    function isChecked(value) {\n        return checked.indexOf(value) !== -1;\n    }\n\n    return (\n        <List className={classes.root}>\n            {props.players.map(value => {\n                let playerName = value.player.name;\n                let playerAbility = value.player.ability;\n                playerName = playerName.size<2?playerName:playerName.charAt(0).toUpperCase() + playerName.slice(1);\n                const labelId = `checkbox-list-label-${playerName}`;\n\n                return (\n                    <ListItem key={playerName} role={undefined} dense button onClick={() => handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={isChecked(value.player)}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={` ${playerName}`} secondary={playerAbility} />\n                        <ListItemSecondaryAction>\n{/*                            <IconButton edge=\"end\" aria-label=\"Comments\">\n                                <Edit color=\"secondary\"/>\n                            </IconButton>*/}\n                            <IconButton edge=\"end\" aria-label=\"Comments\" onClick={()=>handleDelete(value)}>\n                                <Delete color=\"secondary\"/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n   //     maxWidth: 360,\n   //     backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 600,\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    listHeader: {\n        backgroundColor:theme.palette.secondary.main,\n        color:theme.palette.secondary.contrastText,\n       // backgroundColor: theme.palette.background.paper,\n    },\n\n}));\n\nexport default function TeamsList(props) {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root} subheader={<li />}>\n            {props.teams.map((aTeam,sectionId) => (\n                <li key={`section-${sectionId}`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader  className={classes.listHeader}>{`Equipo ${sectionId+1}`}</ListSubheader>\n                        {aTeam.map(item => (\n                            <ListItem key={`${sectionId}-${item.name}`}>\n                                <ListItemText primary={`${item.name}`} />\n                            </ListItem>\n                        ))}\n                    </ul>\n                </li>\n            ))}\n        </List>\n    );\n}","var request = require('request');\n\n\n\nexport default function  getPlayers(){\n    let host = 'http://arma-tu-equipo.herokuapp.com/';\n//    host=\"http://localhost:5000/\"\n    return fetch(host+'players', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n;\n\n\n    /*\n    request('http://arma-tu-equipo.herokuapp.com/players', function (error, response, body) {\n        console.error('error:', error); // Print the error if one occurred\n        console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n        console.log('body:', body); // Print the HTML for the Google homepage.\n    return response;\n    });*/\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function PlusButton(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} onClick={props.onClick}>\n                <AddIcon />\n            </Fab>\n        </div>\n    );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport PlusButton from \"./PlusButton\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n}));\n\nexport default function TextFields(props) {\n\n    const handleAdd = props.handleAdd;\n\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        name: 'Juan',\n        ability: '10',\n    });\n\n    const handleChange = name => event => {\n        setValues({ ...values, [name]: event.target.value });\n    };\n    let newPlayer={name:values.name,ability:values.ability};\n\n    function handelOnClick() {\n        if (values.name == '' || values.ability == '') return;\n        handleAdd(newPlayer);\n        setValues({name:'',ability: '',})\n    }\n\n    return (\n        <div>\n             <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n                id=\"standard-name\"\n                label=\"Nombre\"\n                  className={classes.textField}\n                   value={values.name}\n                  onChange={handleChange('name')}\n                margin=\"normal\"\n            />\n            <TextField\n                id=\"standard-number\"\n                label=\"Habilidad\"\n                   value={values.ability}\n                   onChange={handleChange('ability')}\n                type=\"number\"\n                   className={classes.textField}\n                   InputLabelProps={{\n                       shrink: true,\n                   }}\n                margin=\"normal\"\n            />\n        </form>\n            <PlusButton onClick={handelOnClick} />\n        </div>\n    );\n}","import * as React from \"react\";\nimport ButtonAppBar from \"./components/AppBar\";\nimport CheckList from \"./components/CheckList\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\nimport TeamsList from \"./components/TeamsList\";\nimport Box from \"@material-ui/core/Box\";\nimport PlayersClient from './PlayersClient';\nimport generateTeams from './TeamGenerator';\nimport AddPlayerPanel from \"./components/AddPlayerPanel\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles} from \"@material-ui/core\";\n\n\nclass MainPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            playersCheckList: [],\n            teams:[],\n            teamsNumber:2\n        };\n    }\n\n    getAll = () => {\n\n        console.log(1);\n        PlayersClient().then(response => this.state.playersCheckList = response.json())\n            .then(data => this.setState({\n                data: data, playersCheckList: data.map(j => {\n                    return {\n                        player: j,\n                        checked: false\n                    }\n                })\n            }));\n    }\n\n    componentDidMount() {\n        this.getAll();\n    }\n\n    handleChangeTeamsNumber(event) {\n        this.setState({...this.state,teamsNumber:event.target.value})\n    }\n\n    //hsndleCheck\n    handleToggle(value) {\n        let players = this.state.playersCheckList.map(i=>i.player);\n        const currentIndex = players.indexOf(value.player);\n        value.checked= !value.checked;\n        const newChecked = [...this.state.playersCheckList];\n        newChecked[currentIndex]=value;\n\n        this.setState({...this.state,playersCheckList:newChecked})\n    }\n\n    handleAdd(player){\n\n        let newPlchkList =this.state.playersCheckList.slice(0);\n        newPlchkList.push({player:player,checked:false})\n\n        this.setState({...this.state, playersCheckList:newPlchkList})\n    }\n\n    handleDelete(player){\n\n        let newPlchkList =this.state.playersCheckList.slice(0);\n        newPlchkList.splice(newPlchkList.indexOf(player),1)\n        this.setState({...this.state, playersCheckList:newPlchkList})\n    }\n\n\n\n    generateTeams() {\n\n        let checkedPlayers = this.getSelectedPlayers();\n        checkedPlayers.sort(function() {\n            return .5 - Math.random();\n        });\n        let quantity = this.state.teamsNumber;\n        let teams = generateTeams(checkedPlayers, quantity);\n\n        this.setState({...this.state,teams: teams})\n        console.log(this.state)\n    }\n\n    render() {\n\n        let jugadores = this.state.playersCheckList;\n        let checked = this.getSelectedPlayers();\n\n        let teams = this.state.teams;\n\n\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-a\">\n                    <ButtonAppBar title=\"Arma tu Team\"/>\n                </header>\n                <Box ml={4} mr={4}>\n\n                    <AddPlayerPanel handleAdd={(v) => this.handleAdd.bind(this)(v)}/>\n\n                    <CheckList players={jugadores} checked={checked} handleDelete={this.handleDelete.bind(this)}\n                               handleToggle={(v) => this.handleToggle.bind(this)(v)}/>\n                    <TeamsNumber teamsNumber={this.state.teamsNumber} handleChange={this.handleChangeTeamsNumber.bind(this)}/>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.generateTeams.bind(this)}>\n                        <Box>\n                            <Icon className=\"play-arrow\" edge=\"start\" color=\"inherit\" aria-label=\"Generar\">\n                                <PlayArrowIcon/>\n                            </Icon>\n                        </Box>\n                        Generar\n                    </Button>\n\n                    <Box justifyContent=\"center\" display=\"flex\" ml={4} mr={4}>\n                        <TeamsList teams={teams}/>\n                    </Box>\n                </Box>\n            </div>)\n    }\n\n\n    getSelectedPlayers() {\n        return  this.state.playersCheckList.filter(i => i.checked).map(i=>i.player);\n    }\n}\n\n\n\n    function TeamsNumber(props){\n\n        const useStyles = makeStyles(theme => ({\n            textField: {\n                marginLeft: theme.spacing(1),\n                marginRight: theme.spacing(1),\n                width: 200,\n            },\n        }));\n        return(\n            <TextField\n                id=\"teamsNumber\" label=\"Cantidad de Equipos\" type=\"number\"\n                value={props.teamsNumber}\n                onChange={props.handleChange}\n                className={useStyles().textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                margin=\"normal\"\n            />\n        )\n    }\n\nexport default MainPanel;","export default function generateTeams(checkedPlayers, quantity,teams = []) {\n\n    let tsize = Math.trunc(checkedPlayers.length / quantity);\n    let j = 0\n    for (let i = 0; i < quantity; i++) {\n        j = j + tsize\n        teams.push(checkedPlayers.slice(i * tsize, j));\n    }\n    return teams\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/lightGreen';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport MainPanel from './MainPanel';\n\nconst theme = createMuiTheme({\n    palette: {\n        /*primary: {\n            main: '#aeea00',// green\n            contrastText: '#ffffff',\n        },*/\n        primary:green,\n        secondary: {\n            main: '#00685b',// teal\n          //  contrastText: '#ffffff',\n        },\n       // type: 'dark',\n      //  contrastText: '#ffcc00',\n        contrastThreshold: 3,\n    },\n    status: {\n        danger: 'orange',\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <MainPanel />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}